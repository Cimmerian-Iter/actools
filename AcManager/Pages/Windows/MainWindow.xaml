<mui:ModernWindow x:Class="AcManager.Pages.Windows.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:windows="clr-namespace:AcManager.Pages.Windows" xmlns:g="clr-namespace:AcManager" xmlns:t="http://acstuff.ru/app/tools"
    xmlns:c="http://acstuff.ru/app/controls" xmlns:system="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d" Title="{x:Static g:AppStrings.Main_Title}"
    IsTitleVisible="False" MinWidth="800" MinHeight="640" Width="960" Height="800" AllowsTransparency="False" FocusVisualStyle="{x:Null}" AllowDrop="True"
    Drop="OnDrop" DragEnter="OnDragEnter" DefaultContentSource="/Pages/Drive/QuickDrive.xaml" Loaded="OnLoaded" Unloaded="OnUnloaded" Closing="OnClosing"
    Closed="OnClosed" MouseRightButtonUp="OnMouseRightButtonDown" PreviewMouseRightButtonUp="OnPreviewMouseRightButtonUp"
    PreviewMouseRightButtonDown="OnPreviewMouseRightButtonDown" KeyDown="OnKeyDown" FrameNavigating="OnFrameNavigating"
    mui:ModernMenu.Initialize="OnMainMenuInitialize" d:DataContext="{d:DesignInstance windows:MainWindow+ViewModel}" SaveKey="MainWindow"
    LocationAndSizeKey="MainWindow_LS" x:Name="Window" ShowErrorsButton="False"
    BackButtonVisibility="{Binding ShowMainWindowBackButton, Source={x:Static c:AppAppearanceManager.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}">
  <mui:ModernWindow.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/FancyBackgroundBrush.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
        <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Themes/ModernWindow.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <mui:BooleanLazySwitch x:Key="SteamOverlayFix" TrueResourceKey="Obj" Value="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}">
        <mui:BooleanLazySwitch.Resources>
          <Border x:Key="Obj" Background="#01000000" IsHitTestVisible="False">
            <Border.Style>
              <Style>
                <Style.Triggers>
                  <EventTrigger RoutedEvent="Border.Loaded">
                    <BeginStoryboard>
                      <Storyboard Timeline.DesiredFrameRate="30">
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" Duration="0:0:1" RepeatBehavior="Forever" From="0" To="0.1" />
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                </Style.Triggers>
              </Style>
            </Border.Style>
          </Border>
        </mui:BooleanLazySwitch.Resources>
      </mui:BooleanLazySwitch>

      <system:Boolean x:Key="SystemButtonActive">True</system:Boolean>

      <Style x:Key="SystemButtonGo" TargetType="ButtonBase" BasedOn="{StaticResource SystemButton}">
        <Style.Triggers>
          <Trigger Property="Tag" Value="{StaticResource SystemButtonActive}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource GoButtonText}" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                  <mui:Cell>
                    <ContentPresenter x:Name="Presenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />
                    <mui:Cell x:Name="Chrome" Background="{DynamicResource GoButtonBackgroundPressed}"
                        Opacity="{Binding Background.Opacity, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
                      <Border Opacity="{Binding BorderBrush.Opacity, RelativeSource={RelativeSource TemplatedParent}}" Background="Black">
                        <Border Background="{DynamicResource GoButtonBackgroundPressed}" Opacity="0.7" />
                      </Border>
                      <Border Background="{DynamicResource GoButtonTextPressed}" Width="{Binding ActualWidth, ElementName=Presenter}"
                          Height="{Binding ActualHeight, ElementName=Presenter}">
                        <Border.OpacityMask>
                          <VisualBrush Visual="{Binding ElementName=Presenter}" Stretch="None" />
                        </Border.OpacityMask>
                      </Border>
                    </mui:Cell>
                  </mui:Cell>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="SystemButtonGo.ResizeTweaked" TargetType="ButtonBase" BasedOn="{StaticResource SystemButton}">
        <Style.Triggers>
          <Trigger Property="Tag" Value="{StaticResource SystemButtonActive}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource GoButtonText}" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                  <mui:Cell IsHitTestVisible="False" Opacity="0.2">
                    <ContentPresenter x:Name="Presenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />
                    <mui:Cell x:Name="Chrome" Background="{DynamicResource GoButtonBackgroundPressed}"
                        Opacity="{Binding Background.Opacity, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
                      <Border Opacity="{Binding BorderBrush.Opacity, RelativeSource={RelativeSource TemplatedParent}}" Background="Black">
                        <Border Background="{DynamicResource GoButtonBackgroundPressed}" Opacity="0.7" />
                      </Border>
                      <Border Background="{DynamicResource GoButtonTextPressed}" Width="{Binding ActualWidth, ElementName=Presenter}"
                          Height="{Binding ActualHeight, ElementName=Presenter}">
                        <Border.OpacityMask>
                          <VisualBrush Visual="{Binding ElementName=Presenter}" Stretch="None" />
                        </Border.OpacityMask>
                      </Border>
                    </mui:Cell>
                  </mui:Cell>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>

      <DataTemplate x:Key="MenuButtonContent">
        <mui:Cell>
          <Canvas x:Name="MainCanvas" Width="9" Height="9" ClipToBounds="True" mui:StoryboardHelper.ContinuousFiring="{Binding}"
              mui:StoryboardHelper.ContinuousFiringInterval="0:0:1">
            <Canvas Width="9" Height="9">
              <FrameworkElement.RenderTransform>
                <TranslateTransform x:Name="ArrowTransform" Y="-8" />
              </FrameworkElement.RenderTransform>
              <Line X1="4.51" X2="4.51" Y1="0" Y2="8.5" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  RenderOptions.EdgeMode="Aliased"
                  StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:DpiAwareWindow}}" />
              <Path Data="M-0.01,3.99 L4.51,7.49 M4.49,7.49 L9.01,3.99" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:DpiAwareWindow}}" />
            </Canvas>
            <Line X1="-1" X2="10" Y1="0.75" Y2="0.75" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:DpiAwareWindow}}">
              <Line.RenderTransform>
                <TranslateTransform x:Name="TopLineTransform" />
              </Line.RenderTransform>
            </Line>
            <Line X1="-1" X2="10" Y1="4.75" Y2="4.75" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:DpiAwareWindow}}">
              <Line.RenderTransform>
                <TranslateTransform x:Name="MiddleLineTransform" />
              </Line.RenderTransform>
            </Line>
            <Line X1="-1" X2="10" Y1="8.75" Y2="8.75" Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding IconPathThickness, RelativeSource={RelativeSource AncestorType=mui:DpiAwareWindow}}" />
          </Canvas>
          <Ellipse x:Name="UpdateMark" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 -2 -4 0" Width="6" Height="6"
              Fill="{DynamicResource Accent}" />
        </mui:Cell>
        <DataTemplate.Resources>
          <PathGeometry x:Key="MarkClip">F1 M 0,0L 5.10002,0C 5.03443,0.323109 5,0.657536 5,1C 5,3.41896 6.71776,5.43672 9,5.89999L 9,9L 0,9L 0,0 Z</PathGeometry>
          <Storyboard x:Key="ArrowAnimation" TargetProperty="Y" TargetName="ArrowTransform" Completed="OnCompleted" Duration="0:0:1.000">
            <DoubleAnimationUsingKeyFrames>
              <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="-8" />
              <LinearDoubleKeyFrame KeyTime="0:0:1.000" Value="8" />
            </DoubleAnimationUsingKeyFrames>
          </Storyboard>
          <Storyboard x:Key="MoveLinesDown" TargetProperty="Y" TargetName="TopLineTransform">
            <DoubleAnimation Storyboard.TargetName="TopLineTransform" Duration="0:0:0.500" To="8" />
            <DoubleAnimation Storyboard.TargetName="MiddleLineTransform" Duration="0:0:0.250" To="4" />
          </Storyboard>
          <Storyboard x:Key="RestoreLines" TargetProperty="Y" TargetName="ArrowTransform">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TopLineTransform">
              <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="-9" />
              <LinearDoubleKeyFrame KeyTime="0:0:0.560" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MiddleLineTransform">
              <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="-5" />
              <LinearDoubleKeyFrame KeyTime="0:0:0.310" Value="0" />
            </DoubleAnimationUsingKeyFrames>
          </Storyboard>
        </DataTemplate.Resources>
        <DataTemplate.Triggers>
          <DataTrigger Binding="{Binding HasUnseen, Source={x:Static mui:NonfatalError.Instance}}" Value="True">
            <Setter TargetName="UpdateMark" Property="Visibility" Value="Visible" />
            <Setter TargetName="UpdateMark" Property="Fill" Value="{DynamicResource Error}" />
            <Setter TargetName="MainCanvas" Property="Clip" Value="{StaticResource MarkClip}" />
          </DataTrigger>
          <DataTrigger Binding="{Binding IsUpdateReady, Source={x:Static t:AppUpdater.Instance}}" Value="True">
            <Setter TargetName="UpdateMark" Property="Visibility" Value="Visible" />
            <Setter TargetName="UpdateMark" Property="Fill" Value="{DynamicResource Accent}" />
            <Setter TargetName="MainCanvas" Property="Clip" Value="{StaticResource MarkClip}" />
          </DataTrigger>
          <Trigger SourceName="MainCanvas" Property="mui:StoryboardHelper.ContinuousFired" Value="True">
            <Trigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ArrowAnimation}" />
            </Trigger.EnterActions>
          </Trigger>
          <Trigger SourceName="MainCanvas" Property="mui:StoryboardHelper.ContinuousFiringActive" Value="True">
            <Trigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource MoveLinesDown}" />
            </Trigger.EnterActions>
            <Trigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource RestoreLines}" />
            </Trigger.ExitActions>
          </Trigger>
        </DataTemplate.Triggers>
      </DataTemplate>

      <DockPanel x:Key="DownloadsMenuSection" x:Shared="False">
        <Separator DockPanel.Dock="Top" Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
        <TextBlock DockPanel.Dock="Top" Text="Downloads:" Margin="8 8 8 8" Style="{StaticResource Label}" />
        <mui:SpacingUniformGrid Rows="1" HorizontalAlignment="Right" DockPanel.Dock="Bottom" DataContext="{x:Static t:ContentInstallationManager.Instance}"
            Margin="8 0 4 0">
          <Button Command="{Binding InstallAllCommand}" Visibility="{Binding HasMoreThanOneWaiting, Converter={StaticResource BooleanToVisibilityConverter}}"
              Margin="0 8 4 8">
            <DockPanel>
              <Path Width="12" Height="12" DockPanel.Dock="Left" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Uniform" Margin="0 0 4 0" VerticalAlignment="Center" Data="{StaticResource InstallAllIconData}" />
              <TextBlock Text="Install all" />
            </DockPanel>
          </Button>
          <Button Command="{Binding RemoveCompletedCommand}"
              Visibility="{Binding RemoveCompletedCommand.IsAbleToExecute, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 8 4 8">
            <DockPanel>
              <Path Width="12" Height="12" DockPanel.Dock="Left" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Uniform" Margin="0 0 4 0" VerticalAlignment="Center" Data="{StaticResource CleanUpIconData}" />
              <TextBlock Text="Remove completed" />
            </DockPanel>
          </Button>
        </mui:SpacingUniformGrid>
        <Border Tag="DownloadsParent" />
      </DockPanel>
    </ResourceDictionary>
  </mui:ModernWindow.Resources>

  <mui:ModernWindow.TitleButtons>

    <mui:Cell Width="45">
      <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
      <ToggleButton x:Name="DownloadsButton" Style="{StaticResource SystemButtonGo}" Width="45"
          IsHitTestVisible="{Binding RelativeSource={RelativeSource AncestorType=Panel}, Path=Children[1].IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}"
          Tag="{Binding HasUnfinishedItems, Source={x:Static t:ContentInstallationManager.Instance}}" Drop="OnContentTitleLinkDrop" AllowDrop="True">
        <FrameworkElement.ToolTip>
          <mui:Switch Value="{Binding UnfinishedItemsCount, Source={x:Static t:ContentInstallationManager.Instance}}" MaxWidth="480">
            <TextBlock mui:Switch.When="0" Text="Drop a car or something else here to open it in the Content Management section" TextWrapping="Wrap" />
            <TextBlock Text="{Binding UnfinishedItemsCount, Source={x:Static t:ContentInstallationManager.Instance}, StringFormat='{}{0} installing'}"
                TextWrapping="Wrap" />
          </mui:Switch>
        </FrameworkElement.ToolTip>
        <FrameworkElement.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Install all" Command="{Binding InstallAllCommand, Source={x:Static t:ContentInstallationManager.Instance}}">
              <MenuItem.Icon>
                <Path Width="10" Height="10" Margin="0 2 0 0" Stretch="Uniform" Data="{StaticResource InstallAllIconData}" HorizontalAlignment="Right"
                    VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
              </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="Remove completed" Command="{Binding RemoveCompletedCommand, Source={x:Static t:ContentInstallationManager.Instance}}">
              <MenuItem.Icon>
                <Path Width="10" Height="10" Margin="0 2 0 0" Stretch="Uniform" Data="{StaticResource CleanUpIconData}" HorizontalAlignment="Right"
                    VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove all" Command="{Binding RemoveAllCommand, Source={x:Static t:ContentInstallationManager.Instance}}"
                Foreground="{DynamicResource Error}">
              <MenuItem.Icon>
                <Path Width="10" Height="10" Margin="0 2 0 0" Stretch="Uniform" Data="{StaticResource TrashBinIconData}" HorizontalAlignment="Right"
                    VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
              </MenuItem.Icon>
            </MenuItem>
          </ContextMenu>
        </FrameworkElement.ContextMenu>
        <ContentControl ContentTemplate="{StaticResource MenuButtonContent}"
            Content="{Binding HasLoadingItems, Source={x:Static t:ContentInstallationManager.Instance}}" />
      </ToggleButton>
      <c:ModernPopup x:Name="DownloadsPopup" PlacementTarget="{Binding ElementName=DownloadsButton}" Placement="Bottom"
          IsOpen="{Binding IsChecked, ElementName=DownloadsButton, Mode=TwoWay}" Padding="0" Opened="OnDownloadsPopupOpened"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <StackPanel Width="360">

          <StackPanel Visibility="{Binding AppUpdater.ReadyToUpdateVersion, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
            <MenuItem Command="{Binding AppUpdater.FinishUpdateCommand}">
              <MenuItem.Resources>
                <!-- ReSharper disable once Xaml.RedundantResource -->
                <SolidColorBrush x:Key="ItemText" Color="{DynamicResource AccentColor}" />
              </MenuItem.Resources>
              <MenuItem.Icon>
                <Path Width="12" Height="12" Margin="4 2 -2 -2" Stretch="Uniform" Data="{StaticResource UpdateIconData}" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
              </MenuItem.Icon>
              <MenuItem.Header>
                <mui:BbCodeBlock Text="{Binding AppUpdater.ReadyToUpdateVersion, StringFormat={x:Static mui:UiStrings.UpdateAvailable}}" />
              </MenuItem.Header>
            </MenuItem>
            <MenuItem Header="View changelog" Command="{Binding ViewChangelogCommand}" />
            <MenuItem Header="Skip this update" Command="{Binding AppUpdater.IgnoreUpdateCommand}" />
            <MenuItem Header="Disable auto-updates" Command="{Binding AppUpdater.DisableAutoUpdatesCommand}" />
            <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
          </StackPanel>

          <StackPanel Visibility="{Binding HasUnseen, Source={x:Static mui:NonfatalError.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <MenuItem Command="{Binding ViewErrorsCommand, Source={x:Static mui:NonfatalError.Instance}}"
                Header="{Binding Errors.Count, Source={x:Static mui:NonfatalError.Instance}, Converter={StaticResource PluralizingConverter}, ConverterParameter='Caught {0} {error}'}">
              <MenuItem.Resources>
                <!-- ReSharper disable once Xaml.RedundantResource -->
                <SolidColorBrush x:Key="ItemText" Color="{DynamicResource ErrorColor}" />
              </MenuItem.Resources>
              <MenuItem.Icon>
                <Path Width="12" Height="12" Margin="4 2 -2 -2" Stretch="Uniform" Data="{StaticResource ErrorIconData}" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
              </MenuItem.Icon>
            </MenuItem>
            <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
          </StackPanel>

          <MenuItem Header="{x:Static g:AppStrings.Main_Drive}" Click="OnNavigateItemClick" CommandParameter="/Pages/Drive/QuickDrive.xaml"
              InputGestureText="F1">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource CarsIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Lap times" Click="OnNavigateItemClick" CommandParameter="/Pages/Miscellaneous/LapTimes_Recent.xaml" InputGestureText="F2">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource TimerIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Results" Click="OnNavigateItemClick" CommandParameter="/Pages/Miscellaneous/PlayerStats.xaml" InputGestureText="F3">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource ListCheckIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="{x:Static g:AppStrings.Main_Media}" Click="OnNavigateItemClick" CommandParameter="/Pages/Lists/ReplaysListPage.xaml"
              InputGestureText="F4">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource VideoIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
          <MenuItem Header="{x:Static g:AppStrings.Main_Content}" Click="OnNavigateItemClick" CommandParameter="/Pages/Lists/CarsListPage.xaml"
              InputGestureText="Ctrl+F1">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource ToolsIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="{x:Static g:AppStrings.Main_Server}" Click="OnNavigateItemClick" CommandParameter="/Pages/Lists/ServerPresetsListPage.xaml"
              InputGestureText="Ctrl+F2" mui:LimitedService.Limited="True">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource ServerIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
          <MenuItem Header="Downloads" Click="OnNavigateItemClick" CommandParameter="/Pages/Miscellaneous/DownloadsList.xaml" InputGestureText="Ctrl+J"
              Visibility="{Binding DownloadsInSeparatePage, Source={x:Static c:AppAppearanceManager.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource DownloadIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"
              Visibility="{Binding DownloadsInSeparatePage, Source={x:Static c:AppAppearanceManager.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}" />
          <MenuItem Header="CM settings" Click="OnNavigateItemClick" CommandParameter="/Pages/Settings/SettingsPage.xaml" InputGestureText="Alt+F1">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource GearIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="AC settings" Click="OnNavigateItemClick" CommandParameter="/Pages/AcSettings/AcSettingsPage.xaml" InputGestureText="Alt+F2">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource AcIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Apps settings" Click="OnNavigateItemClick" CommandParameter="/Pages/Settings/PythonAppsSettings.xaml" InputGestureText="Alt+F3">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource CarSetupIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="About Content Manager" Click="OnNavigateAboutItemClick">
            <MenuItem.Icon>
              <Path Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" Data="{StaticResource CmIconData}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
              <!--<Image Source="/Assets/Icons/Icon.ico" Width="12" Height="12" Margin="4 0 -2 0" Stretch="Uniform" HorizontalAlignment="Center"
                  VerticalAlignment="Center" />-->
            </MenuItem.Icon>
          </MenuItem>
          <Border Loaded="OnDownloadListParentLoaded" Tag="DownloadsListParent" />
        </StackPanel>
      </c:ModernPopup>
    </mui:Cell>

  </mui:ModernWindow.TitleButtons>

  <mui:ModernWindow.MenuLinkGroups>
    <!-- ReSharper disable Xaml.PathError -->

    <!-- Drive -->
    <mui:LinkGroup GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Single}">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_QuickDrive}" Source="/Pages/Drive/QuickDrive.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Career}" Source="/Pages/Drive/KunosCareer.xaml" />
        <mui:Link DisplayName="Championships" Source="/Pages/Drive/UserChampionships.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroupFilterable GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Challenges}" Source="/Pages/Drive/SpecialEvents.xaml"
        FilterHint="{x:Static c:FilterHints.SpecialEvents}">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="Hotlaps" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:hotlap&amp;Special=1" />
        <mui:Link DisplayName="Races" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:*race&amp;Special=1" />
        <mui:Link DisplayName="Drift" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:drift&amp;Special=1" />
        <mui:Link DisplayName="Drag" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:drag&amp;Special=1" />
        <mui:Link DisplayName="Time Attack" Source="/Pages/Drive/SpecialEvents.xaml?Filter=type:time attack&amp;Special=1" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>
    <mui:LinkGroup x:Name="LiveGroup" GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Live}">
      <mui:LinkGroup.Links>
        <mui:Link x:Name="RsrLink" DisplayName="{x:Static g:AppStrings.Main_Rsr}" Source="/Pages/Drive/Rsr.xaml" />
        <!--<mui:Link x:Name="SrsLink" DisplayName="{x:Static g:AppStrings.Main_Srs}" Source="/Pages/Drive/Srs.xaml" />-->
        <mui:Link x:Name="Srs2Link" DisplayName="{x:Static g:AppStrings.Main_Srs}" Source="/Pages/Drive/Srs2.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroupFilterable x:Name="OnlineGroup" GroupKey="drive" DisplayName="{x:Static g:AppStrings.Main_Online}" AddAllLink="False"
        Source="/Pages/Drive/Online.xaml" FilterHint="{x:Static c:FilterHints.ServerEntries}">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="Kunos" Source="/Pages/Drive/Online.xaml?Filter=@kunos&amp;Special=1" />
        <!--<mui:Link x:Name="MinoratingLink" DisplayName="Minorating" Source="/Pages/Drive/Online.xaml?Filter=@minorating&amp;Special=1" />-->
        <mui:Link DisplayName="LAN" Source="/Pages/Drive/Online.xaml?Filter=@lan&amp;Special=1" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>

    <!-- Lap times -->
    <mui:LinkGroupFilterable GroupKey="lapTimes" DisplayName="{x:Static g:AppStrings.Main_RecentLapTimes}" Source="/Pages/Miscellaneous/LapTimes_Recent.xaml"
        FilterHint="{x:Static c:FilterHints.LapTimes}" />
    <mui:LinkGroupFilterable GroupKey="lapTimes" DisplayName="Table" Source="/Pages/Miscellaneous/LapTimes_Table.xaml"
        FilterHint="{x:Static c:FilterHints.LapTimes}" />
    <mui:LinkGroupFilterable x:Name="LapTimesGrid" GroupKey="lapTimes" DisplayName="{x:Static g:AppStrings.Main_LapTimesGrid}"
        Source="/Pages/Miscellaneous/WorkInProgress.xaml?lapTimesGrid" FilterHint="{x:Static c:FilterHints.LapTimes}" />
    <mui:LinkGroupFilterable GroupKey="lapTimes" DisplayName="Sources" Source="/Pages/Miscellaneous/LapTimes_Sources.xaml"
        FilterHint="{x:Static c:FilterHints.LapTimes}" />

    <!-- Stats -->
    <mui:LinkGroupFilterable GroupKey="stats" DisplayName="Results" Source="/Pages/Miscellaneous/RaceResults.xaml" />
    <mui:LinkGroupFilterable GroupKey="stats" DisplayName="{x:Static g:AppStrings.Main_Stats}" Source="/Pages/Miscellaneous/PlayerStats.xaml">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="Kunos cars only" Source="/Pages/Miscellaneous/PlayerStats.xaml?Filter=car(k+)&amp;Special=1" />
        <mui:Link DisplayName="Kunos cars &amp; tracks only" Source="/Pages/Miscellaneous/PlayerStats.xaml?Filter=car(k+)%26track(k+)&amp;Special=1" />
        <mui:Link DisplayName="Mods only" Source="/Pages/Miscellaneous/PlayerStats.xaml?Filter=car(k-)%26track(k-)&amp;Special=1" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>
    <mui:LinkGroupFilterable GroupKey="stats" DisplayName="Most used" Source="/Pages/Miscellaneous/MostUsed.xaml" />

    <!-- Media -->
    <mui:LinkGroupFilterable GroupKey="media" DisplayName="{x:Static g:AppStrings.Main_Screenshots}" Source="/Pages/Lists/ScreenshotsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Replays}" />
    <mui:LinkGroupFilterable GroupKey="media" DisplayName="{x:Static g:AppStrings.Main_Replays}" Source="/Pages/Lists/ReplaysListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Files}" />

    <!-- Content -->
    <mui:LinkGroupFilterable GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Cars}" Source="/Pages/Lists/CarsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Cars}" />
    <mui:LinkGroupFilterable GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Tracks}" Source="/Pages/Lists/TracksListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Tracks}" />
    <mui:LinkGroupFilterable GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Showrooms}" Source="/Pages/Lists/ShowroomsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.Showrooms}" />
    <mui:LinkGroup GroupKey="content" DisplayName="{x:Static g:AppStrings.Main_Miscellaneous}">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Apps}" Source="/Pages/Lists/PythonAppsListPage.xaml" />
        <mui:Link DisplayName="Driver models" Source="/Pages/Lists/DriverModelsListPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Fonts}" Source="/Pages/Lists/FontsListPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_PpFilters}" Source="/Pages/Lists/PpFiltersListPage.xaml" />
        <mui:Link DisplayName="User championships" Source="/Pages/Lists/UserChampionshipsListPage.xaml" IsEnabled="False" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_Weather}" Source="/Pages/Lists/WeatherListPage.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroupFilterable GroupKey="content" DisplayName="Mods" Source="/Pages/Lists/GenericModsListPage.xaml" />
    <mui:LinkGroup GroupKey="content" DisplayName="Tools">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static mui:UiStrings.FiltersLinkAll}" Source="/Pages/Lists/ToolsListPage.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>
    <mui:LinkGroup x:Name="BrowserLinkGroup" GroupKey="content" DisplayName="Mod Shop">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="Manage Sources" Source="/Pages/Miscellaneous/ModsWebBrowser.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>

    <!-- Downloads -->
    <mui:LinkGroup GroupKey="downloads" DisplayName="Downloads">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="Downloads &amp; Installations" Source="/Pages/Miscellaneous/DownloadsList.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>

    <!-- Server Source="/Pages/Lists/ServerPresetsListPage.xaml" -->
    <mui:LinkGroupFilterable GroupKey="server" DisplayName="{x:Static g:AppStrings.Main_ServerPresets}" Source="/Pages/Lists/ServerPresetsListPage.xaml"
        FilterHint="{x:Static c:FilterHints.ServerPresets}" />

    <!-- Settings -->
    <mui:LinkGroupFilterable GroupKey="settings" DisplayName="{x:Static g:AppStrings.Main_Settings}" AddAllLink="False" Source="/Pages/Settings/Search.xaml">
      <mui:LinkGroupFilterable.FixedLinks>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_ContentManager}" Source="/Pages/Settings/SettingsPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_AssettoCorsa}" Source="/Pages/AcSettings/AcSettingsPage.xaml" />
        <mui:Link DisplayName="Custom Shaders Patch" Source="/Pages/Settings/SettingsShadersPatch.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.AcSettings_Apps}" Source="/Pages/Settings/PythonAppsSettings.xaml" />
      </mui:LinkGroupFilterable.FixedLinks>
    </mui:LinkGroupFilterable>

    <!-- About -->
    <mui:LinkGroup DisplayName="{x:Static g:AppStrings.Main_About}" GroupKey="about">
      <mui:LinkGroup.Links>
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_About}" Source="/Pages/About/AboutPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_ReleaseNotes}" Source="/Pages/About/ReleaseNotesPage.xaml" />
        <mui:Link DisplayName="{x:Static g:AppStrings.Main_ImportantTips}" Source="/Pages/About/ImportantTipsPage.xaml" />
        <mui:Link DisplayName="Everything about filtering" Source="/Pages/About/FiltersPage.xaml" />
      </mui:LinkGroup.Links>
    </mui:LinkGroup>

    <!-- ReSharper restore Xaml.PathError -->
  </mui:ModernWindow.MenuLinkGroups>

  <mui:ModernWindow.TitleLinks>
    <mui:TitleLink GroupKey="drive" Source="/Pages/Drive/QuickDrive.xaml">
      <TextBlock Text="{Binding Source={x:Static g:AppStrings.Main_Drive}, Converter={StaticResource ToUpperConverter}}" Drop="OnDriveTitleLinkDrop"
          AllowDrop="True" mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.DragForContentSection}}"
          mui:FancyHintsService.HorizontalContentAlignment="Center" />
    </mui:TitleLink>
    <mui:TitleLink Content="Lap times" GroupKey="lapTimes" Source="/Pages/Miscellaneous/LapTimes_Recent.xaml" />
    <mui:TitleLink Content="Results" GroupKey="stats" Source="/Pages/Miscellaneous/PlayerStats.xaml" />
    <mui:TitleLink Content="{x:Static g:AppStrings.Main_Media}" GroupKey="media" Source="/Pages/Lists/ReplaysListPage.xaml" />
    <mui:TitleLink GroupKey="content" Source="/Pages/Lists/CarsListPage.xaml">
      <TextBlock Text="{Binding Source={x:Static g:AppStrings.Main_Content}, Converter={StaticResource ToUpperConverter}}" Drop="OnContentTitleLinkDrop"
          AllowDrop="True" />
    </mui:TitleLink>
    <mui:TitleLink DisplayName="Downloads" GroupKey="downloads" Source="/Pages/Miscellaneous/DownloadsList.xaml" />
    <mui:TitleLink DisplayName="{x:Static g:AppStrings.Main_Server}" GroupKey="server" IsEnabled="False" Source="/Pages/Lists/ServerPresetsListPage.xaml" />
    <mui:TitleLink Content="{x:Static g:AppStrings.Main_Settings}" GroupKey="settings" Source="/Pages/Settings/SettingsPage.xaml" />
    <mui:TitleLink Content="{x:Static g:AppStrings.Main_About}" GroupKey="about" Source="/Pages/About/AboutPage.xaml" />
    <mui:TitleLink x:Name="OriginalLauncher" GroupKey="originalLauncher" Content="original launcher" Source="{x:Static windows:MainWindow.OriginalLauncherUrl}" />
    <mui:TitleLink Content="switch to full version" Source="{x:Static windows:MainWindow.EnterKeyUrl}" IsAccented="True" />
  </mui:ModernWindow.TitleLinks>

  <mui:Cell x:Name="OverlayContentCell" ClipToBounds="True">
    <Border x:Name="Popup" HorizontalAlignment="Left" Width="330">
      <Border.Style>
        <Style TargetType="Border">
          <Setter Property="Focusable" Value="True" />
          <Setter Property="FocusVisualStyle" Value="{x:Null}" />
          <Setter Property="RenderTransform">
            <Setter.Value>
              <TranslateTransform X="-340" />
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <EventTrigger RoutedEvent="GotFocus">
              <EventTrigger.Actions>
                <BeginStoryboard>
                  <Storyboard FillBehavior="HoldEnd" TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <DoubleAnimation To="0" Duration="0:0:0.24" EasingFunction="{StaticResource DecelerationEase}" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="LostFocus">
              <EventTrigger.Actions>
                <BeginStoryboard>
                  <Storyboard FillBehavior="Stop" TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <DoubleAnimation To="-340" Duration="0:0:0.24" EasingFunction="{StaticResource AccelerationEase}" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger.Actions>
            </EventTrigger>
          </Style.Triggers>
        </Style>
      </Border.Style>
    </Border>
    <Popup Placement="Absolute" HorizontalOffset="{Binding ActualRight, ElementName=Window, Converter={StaticResource SumConverter}, ConverterParameter=-140}"
        VerticalOffset="{Binding ActualBottom, ElementName=Window, Converter={StaticResource SumConverter}, ConverterParameter=-100}" Height="80" Width="120"
        x:Name="QuickSwitchesNotification" StaysOpen="True" PopupAnimation="Fade" AllowsTransparency="True">
      <Border Background="{DynamicResource WindowBackground}" Padding="12" CornerRadius="0" BorderBrush="{DynamicResource WindowBorderActive}"
          BorderThickness="1">
        <DockPanel>
          <TextBlock x:Name="QuickSwitchesNotificationText" DockPanel.Dock="Bottom" Style="{StaticResource Label}" Margin="0 4 0 0"
              HorizontalAlignment="Center" />
          <Path x:Name="QuickSwitchesNotificationIcon" Width="24" Height="24" Fill="{Binding Foreground, ElementName=QuickSwitchesNotificationText}"
              Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" />
        </DockPanel>
      </Border>
    </Popup>
  </mui:Cell>
</mui:ModernWindow>